version: '3.3'

services:

  beestorage:
    image: lionants02/thumbormongodocker:1.3
    environment:
      - MONGO_STORAGE_SERVER_HOST=mongo_router  #กำหนดค่า IP mongoDB
      - MONGO_STORAGE_SERVER_PORT=27081         #Port mongoDB
      - MONGO_STORAGE_SERVER_DB=picture         #ชื่อ Database ที่จะใช้เก็บข้อมูลใน mongoDB
      - MONGO_STORAGE_SERVER_COLLECTION=imagefile #collectionใน mongoDB
      - UPLOAD_ENABLED=True                     #เปิดใช้การ Upload
      - UPLOAD_PUT_ALLOWED=True                 #เปิดใช้การ Update
      - UPLOAD_DELETE_ALLOWED=True              #เปิดใช้การ Delete
      - STORAGE_EXPIRATION_SECONDS=2592000      #แคช บน Server กำหนดอายุเป็นวินาที
      - MAX_WIDTH=0         #กำหนดความกว้างสุดของรูปที่ยอมรับ Upload
      - MAX_HEIGHT=0        #กำหนดความสูงสุดของรูปที่ยอมรับ Upload
      - UPLOAD_MAX_SIZE=0   #กำหนดขนาดสูงสุดที่จะยอมรับ Upload
      - MAX_AGE=0           #อายุแคชในเครื่อง client
    ports:
      - "9000:8000"
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure


  mongo_router:
    image: mongo:3.4
    ports:
      - "27081:27081"
    volumes:
      - /mnt/beestorage-swarm/database/router/db:/data/db
      - /mnt/beestorage-swarm/database/router/configdb:/data/configdb
      - /mnt/beestorage-swarm/init_mongodb:/data/init_mongodb
    command: sh -c 'sleep 5 && su --command "sh /data/init_mongodb/init.sh &" && sleep 5 && su --command "mongos --configdb configserver/config1:27019 --port 27081"'
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.role == frontend     #docker node update --label-add mongo.role=frontend [hostname]
                                                #Ex. 'docker node update --label-add mongo.role=frontend FAARMIS-LOG'
    depends_on:
      - configdb_r1s1
      - datadb_r1s1

  configdb_r1s1:
    image: mongo:3.4
    volumes:
      - /mnt/beestorage-swarm/database/configdb:/data/configdb
    ports:
      - "27019:27019"
    command: mongod --configsvr --smallfiles --replSet configserver --port 27019
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.role == frontend

  datadb_r1s1:
    image: mongo:3.4
    volumes:
      - /mnt/beestorage-swarm/database/db:/data/db
    ports:
      - "27020:27020"
    command: mongod --noprealloc --replSet dataGroup1 --shardsvr --port 27020
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.role == data1
